---
title: "modern"
format: html
editor: source
---

## Setup

Load packages and functions and export model versions for use.

```{r setup}
#| output: false
library(R2jags)
library(openxlsx)
library(viridisLite)
source("code/helpers.R")
parms = c("Pl", "l", "amax.scale", "D", "gc.scale", "ca", "meso.scale",
          "Ci0_m", "A0_m", "d13Ca_m", "A", "D13C", "gcop")
```

Load data.

```{r data}
d = read.xlsx("data/stomata-franks_modernTests.xlsx", sheet = 1, startRow = 3)
```

Deal with the samples for which s3 is reported as 1. This shows the distribution used.

```{r s3}
mu = 0.97
sigma = 0.05
s3.v = (mu * (1 - mu)) / sigma ^ 2 - 1
s3.synth = rbeta(1e6, mu * s3.v, (1 - mu) * s3.v)
plot(density(s3.synth, from = 0, to = 1))
d$s3[d$s3 == 1] = mu
```

We also need to deal with values of `A0`, which are a species-level parameter in the forward model. I'll average the values measured for each species/CO2 combo to get values we can treat as ~equivalent the the `A0` values we'll use for paleo data.

```{r A0}
treats = unique(d$Sample.Name)
for(i in seq_along(treats)){
  a.mean = mean(d$A0[d$Sample.Name == treats[i]])
  d$A0[d$Sample.Name == treats[i]] = rep(a.mean)
}
```

Now subset the data by treatment.

```{r subset}
d.green.500 = d[d$Stratigraphic.Level == 500,]
d.green.1k = d[d$Stratigraphic.Level == 1000,]
d.field = d[d$Stratigraphic.Level == 400,]
```

## Greenhouse experiments

First we will work with the greenhouse data and run separate inversions for each species. Prep these subsets.

```{r green}
gen = unique(d.green.500$Genus)
d.green.500.g = d.green.1k.g = list()
for(i in seq_along(gen)){
  d.green.500.g[[i]] = d.green.500[d.green.500$Genus == gen[i],]
  d.green.1k.g[[i]] = d.green.1k[d.green.1k$Genus == gen[i],]
}
```

Now run the inversions.

```{r byGenus}
post.500 = post.1k = list()
for(i in seq_along(gen)){
  data = parseFranks(d.green.500.g[[i]])
  prepMod(data)
  post.500[[i]] = jags.parallel(data, inits, parms, file.path(tempdir(), "model.txt"), 
                       n.chains = 3, n.iter = 5e4, n.burnin = 1e4)

  data = parseFranks(d.green.1k.g[[i]])
  prepMod(data)
  post.1k[[i]] = jags.parallel(data, inits, parms, file.path(tempdir(), "model.txt"), 
                       n.chains = 3, n.iter = 5e4, n.burnin = 1e4)
}
```

Let's add a multi-species inversion for each CO2 level.

```{r byLevel}
data = parseFranks(d.green.500)
prepMod(data)
post.500[[4]] = jags.parallel(data, inits, parms, file.path(tempdir(), "model.txt"), 
                       n.chains = 3, n.iter = 5e4, n.burnin = 1e4)

data = parseFranks(d.green.1k)
prepMod(data)
post.1k[[4]] = jags.parallel(data, inits, parms, file.path(tempdir(), "model.txt"), 
                       n.chains = 3, n.iter = 5e4, n.burnin = 1e4)
```

Plot it up.

```{r greenPlot}
dens.500 = dens.1k = list()
for(i in 1:4){
  dens.500[[i]] = density(post.500[[i]]$BUGSoutput$sims.list$ca)
  dens.1k[[i]] = density(post.1k[[i]]$BUGSoutput$sims.list$ca)
}

par(mar = c(3, 5, 1, 1))
plot(0, 0, type = "n", xlim = c(0.018, 0), ylim = c(log(300), log(3000)), axes = FALSE,
     xlab = "", ylab = expression("Atmospheric CO"[2]*" (ppm)"))
abline(h = log(500), lty = 2, lwd = 2)
abline(h = log(1000), lty = 2, lwd = 2)
abline(v = 0, lty = 3)
lines(dens.500[[4]]$y, log(dens.500[[4]]$x), lwd = 4, col = "grey")
lines(dens.1k[[4]]$y, log(dens.1k[[4]]$x), lwd = 4)
xpos = par("usr")[1] + 0.05 * diff(par("usr")[1:2])
for(i in 1:3){
  lines(dens.500[[i]]$y, log(dens.500[[i]]$x), lwd = 2, col = "grey")
  mi = match(max(dens.500[[i]]$y), dens.500[[i]]$y)
  text(xpos, log(dens.500[[i]]$x[mi]), gen[i], pos = 4, col = "grey")
  lines(dens.1k[[i]]$y, log(dens.1k[[i]]$x), lwd = 2)
  mi = match(max(dens.1k[[i]]$y), dens.1k[[i]]$y)
  text(xpos, log(dens.1k[[i]]$x[mi]), gen[i], pos = 4)
}
axis(1)
axis(2, at = log(c(300, 500, 1000, 2000, 3000)), labels = c(300, 500, 1000, 2000, 3000))
box()
```

Interesting results. The multi-species distributions are spot on, but for individual species we see pretty strong deviations from the experimental conditions and these don't match the results from the 'traditional' Franks model. In particular, different taxa seem to show differences in 'sensitivity'. **Cedrus** is biased high in the 1000 ppm experiment and low in the 500 ppm experiment. In contrast, **Stenochlaena** shows a small range of posterior estimates with median estimates from the two experiments only ~150 ppm apart.

My hunch is that this is due to how we're handing `A` in the forward model. For consistency with other applications, I'm using the reported `A0` and `CiCa0` values as if they were just that, so `A` is calculated from these values and the Franks formulation and is a function of the modeled `ca` value. I contrast, I believe that in the traditional interpretation of these data `A = A0` (no sensitivity to `ca`). Let's look at the posterior estimates of `A` and how they compare with the `A0` values for the two contrasting taxa.

```{r plotA1}
cols = viridis(2, begin = 0.2, end = 0.8)
i = 2
plot(d.green.500.g[[i]]$A0, post.500[[i]]$BUGSoutput$median$A, xlim = c(6, 12),
     ylim = c(5, 12), xlab = "A0", ylab = "A", pch = 21, cex = 2, bg = cols[1],
     main = gen[i])
points(d.green.1k.g[[i]]$A0, post.1k[[i]]$BUGSoutput$median$A, pch = 21, 
       cex = 2, bg = cols[2])
abline(0, 1)

i = 3
plot(d.green.500.g[[i]]$A0, post.500[[i]]$BUGSoutput$median$A, xlim = c(2, 8),
     ylim = c(2, 8), xlab = "A0", ylab = "A", pch = 21, cex = 2, bg = cols[1],
     main = gen[i])
points(d.green.1k.g[[i]]$A0, post.1k[[i]]$BUGSoutput$median$A, pch = 21, 
       cex = 2, bg = cols[2])
abline(0, 1)
```

I may need to do more digging as to the mechanics here, but `A` is collapsing to nearly identical values in the two experiments for **Stenochlaena**, whereas the difference between experimental treatments for `A` is actually larger than that for `A0` for for **Cedrus**. Since the posterior estimates of `ca` and `A` are closely linked that's not too surprising, but this shows that `A` is adjusting in the analysis which accounts for the difference in these results relative to the traditional ones that used a prescribed distribution for `A`.

Can we run an experiment that more closely reflects the traditional interpretations? Here's a version of the model which fixes `A`.

```{r}
# Re-prep the data, keeping reported A values
d.fA = read.xlsx("data/stomata-franks_modernTests.xlsx", sheet = 1, startRow = 3)
d.fA$s3[d$s3 == 1] = mu
d.green.500.fA = d.fA[d.fA$Stratigraphic.Level == 500,]
d.green.1k.fA = d.fA[d.fA$Stratigraphic.Level == 1000,]
d.green.500.g.fA = d.green.1k.g.fA = list()
for(i in seq_along(gen)){
  d.green.500.g.fA[[i]] = d.green.500.fA[d.green.500.fA$Genus == gen[i],]
  d.green.1k.g.fA[[i]] = d.green.1k.fA[d.green.1k.fA$Genus == gen[i],]
}

post.500.fA = post.1k.fA = list()
for(i in seq_along(gen)){
  data = parseFranks(d.green.500.g.fA[[i]], fixA = TRUE)
  prepMod.fixA(data)
  post.500.fA[[i]] = jags.parallel(data, inits, parms, file.path(tempdir(), "model.txt"), 
                       n.chains = 3, n.iter = 5e4, n.burnin = 1e4)

  data = parseFranks(d.green.1k.g.fA[[i]], fixA = TRUE)
  prepMod.fixA(data)
  post.1k.fA[[i]] = jags.parallel(data, inits, parms, file.path(tempdir(), "model.txt"), 
                       n.chains = 3, n.iter = 5e4, n.burnin = 1e4)
}

data = parseFranks(d.green.500.fA, fixA = TRUE)
prepMod.fixA(data)
post.500.fA[[4]] = jags.parallel(data, inits, parms, file.path(tempdir(), "model.txt"), 
                       n.chains = 3, n.iter = 5e4, n.burnin = 1e4)

data = parseFranks(d.green.1k.fA, fixA = TRUE)
prepMod(data)
post.1k.fA[[4]] = jags.parallel(data, inits, parms, file.path(tempdir(), "model.txt"), 
                       n.chains = 3, n.iter = 5e4, n.burnin = 1e4)
```

Plot it.

```{r greenPlotFixA}
dens.500.fA = dens.1k.fA = list()
for(i in 1:4){
  dens.500.fA[[i]] = density(post.500.fA[[i]]$BUGSoutput$sims.list$ca)
  dens.1k.fA[[i]] = density(post.1k.fA[[i]]$BUGSoutput$sims.list$ca)
}

par(mar = c(3, 5, 1, 1))
plot(0, 0, type = "n", xlim = c(0.024, 0), ylim = c(log(300), log(3000)), axes = FALSE,
     xlab = "", ylab = expression("Atmospheric CO"[2]*" (ppm)"))
abline(h = log(500), lty = 2, lwd = 2)
abline(h = log(1000), lty = 2, lwd = 2)
abline(v = 0, lty = 3)
lines(dens.500.fA[[4]]$y, log(dens.500.fA[[4]]$x), lwd = 4, col = "grey")
lines(dens.1k.fA[[4]]$y, log(dens.1k.fA[[4]]$x), lwd = 4)
xpos = par("usr")[1] + 0.05 * diff(par("usr")[1:2])
for(i in 1:3){
  lines(dens.500.fA[[i]]$y, log(dens.500.fA[[i]]$x), lwd = 2, col = "grey")
  mi = match(max(dens.500.fA[[i]]$y), dens.500.fA[[i]]$y)
  text(xpos, log(dens.500.fA[[i]]$x[mi]), gen[i], pos = 4, col = "grey")
  lines(dens.1k.fA[[i]]$y, log(dens.1k.fA[[i]]$x), lwd = 2)
  mi = match(max(dens.1k.fA[[i]]$y), dens.1k.fA[[i]]$y)
  text(xpos, log(dens.1k.fA[[i]]$x[mi]), gen[i], pos = 4)
}
axis(1)
axis(2, at = log(c(300, 500, 1000, 2000, 3000)), labels = c(300, 500, 1000, 2000, 3000))
box()
```

Let's take one more look at this, plotting the same comparison but using the posterior values of `A` from the multi-species inversion.

```{r plotA2}
i = 2
si = grep(gen[i], d.green.500$Genus)
plot(d.green.500.g[[i]]$A0, post.500[[4]]$BUGSoutput$median$A[si], xlim = c(6, 16),
     ylim = c(5, 12), xlab = "A0", ylab = "A", pch = 21, cex = 2, bg = cols[1],
     main = gen[i])
si = grep(gen[i], d.green.1k$Genus)
points(d.green.1k.g[[i]]$A0, post.1k[[4]]$BUGSoutput$median$A[si], pch = 21, 
       cex = 2, bg = cols[2])
abline(0, 1)

i = 3
si = grep(gen[i], d.green.500$Genus)
plot(d.green.500.g[[i]]$A0, post.500[[4]]$BUGSoutput$median$A[si], xlim = c(2, 11),
     ylim = c(2, 5), , xlab = "A0", ylab = "A", pch = 21, cex = 2, bg = cols[1],
     main = gen[i])
si = grep(gen[i], d.green.1k$Genus)
points(d.green.1k.g[[i]]$A0, post.1k[[4]]$BUGSoutput$median$A[si], pch = 21, 
       cex = 2, bg = cols[2])
abline(0, 1)
```

Here the expansion/compression of the posterior values of `A` relative to the `A0` is much less drastic, reflecting 